[tool.poetry]
name = "whisper-fastapi"
version = "0.1.0"
description = ""
authors = ["Grzegorz Gwóźdź <g.gwozdz@hotmail.com>"]
packages = [{ include = "*", from = "src" }]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = { extras = ["all"], version = "^0.112.1" }
openai-whisper = { git = "https://github.com/openai/whisper.git", rev = "v20231117" }
pydantic = "^2.8.2"
numpy = "<2.0.0"
grpcio = "^1.65.5"
dependency-injector = "4.42.0b1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"
pytest = "^8.3.2"
Flake8-pyproject = "^1.2.3"
flake8 = "^7.1.1"
black = "^24.8.0"
mypy = "^1.11.1"
isort = "^5.13.2"
vulture = "^2.11"
coverage = "^7.6.1"
bandit = "^1.7.9"
grpcio-tools = "^1.65.5"
mypy-protobuf = "^3.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
exclude = [".venv", "src/adapters/grpc/pb*"]
ignore = ['E203']
max-line-length = 120
count = true

[tool.black]
line-length = 120
force-exclude = '''
src/adapters/grpc/pb
'''

[tool.mypy]
files = ["src", "tests"]
strict = true
ignore_missing_imports = true
exclude = '^src/adapters/grpc/pb/'

[tool.isort]
profile = "black"
skip_glob = ["src/adapters/grpc/pb/*"]

[tool.vulture]
paths = ["src", "tests"]
min_confidence = 70

[tool.coverage.run]
branch = true
command_line = "-m pytest"
source = ["src"]
relative_files = true

[tool.coverage.xml]
output = "coverage-reports/coverage.xml"
